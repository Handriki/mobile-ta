{"version":3,"sources":["./src/app/auth/auth.page.html","./src/app/auth/sign-up/sign-up.component.html","./src/app/auth/auth.module.ts","./src/app/auth/auth.page.scss","./src/app/auth/auth.page.ts","./src/app/auth/auth.service.ts","./src/app/auth/sign-up/sign-up.component.scss","./src/app/auth/sign-up/sign-up.component.ts"],"names":[],"mappings":"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","file":"auth-auth-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>{{ isLogin ? 'Login' : 'Signup' }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-list>\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\">E-mail</ion-label>\\n                <ion-input \\n                  inputmode=\\\"email\\\"\\n                  [(ngModel)]=\\\"email\\\"\\n                  required\\n                  #emailCtrl=\\\"ngModel\\\" \\n                  type=\\\"email\\\">\\n                </ion-input>\\n              </ion-item>\\n              <ion-item\\n                *ngIf=\\\"!emailCtrl.valid && emailCtrl.touched\\\"\\n                lines=\\\"none\\\">\\n              <ion-label>Should be a valid email address</ion-label>\\n              </ion-item>\\n              <ion-item>\\n                  <ion-label position=\\\"floating\\\">Password</ion-label>\\n                  <ion-input \\n                  type=\\\"password\\\"\\n                  [(ngModel)]=\\\"password\\\"\\n                  #passwordCtrl=\\\"ngModel\\\"\\n                  required\\n                  minLength=\\\"6\\\">\\n                </ion-input>\\n              </ion-item>\\n              <ion-item\\n                *ngIf=\\\"!passwordCtrl.valid && passwordCtrl.touched\\\"\\n                lines=\\\"none\\\">\\n              <ion-label>Should be a valid password</ion-label>\\n              </ion-item>\\n          </ion-list>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-button type=\\\"button\\\" color=\\\"primary\\\" fill=\\\"clear\\\" (click)=\\\"presentSignUpModal()\\\" expand=\\\"full\\\">Switch to {{ isLogin ? 'Signup' : 'Login' }}</ion-button>\\n          <ion-button type=\\\"submit\\\" color=\\\"primary\\\" (click)=\\\"onLogin()\\\" expand=\\\"block\\\">Login</ion-button>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n  <!-- <ion-spinner color=\\\"primary\\\" *ngIf=\\\"isLoading\\\"></ion-spinner> -->\\n</ion-content>\\n\"","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Sign Up</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content class=\\\"ion-padding\\\">\\n    <ion-list>\\n      <ion-item>\\n        <ion-label position=\\\"fixed\\\">Email</ion-label>\\n        <ion-input\\n          required\\n          [(ngModel)]=\\\"email\\\"\\n          type=\\\"email\\\"\\n          placeholder=\\\"Your email here\\\"\\n        ></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"fixed\\\">Password</ion-label>\\n        <ion-input\\n          required\\n          [(ngModel)]=\\\"password\\\"\\n          type=\\\"password\\\"\\n          minlength=\\\"6\\\"\\n          placeholder=\\\"******\\\"\\n        ></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"fixed\\\">Confirm Password</ion-label>\\n        <ion-input\\n          required\\n          [(ngModel)]=\\\"cpassword\\\"\\n          type=\\\"password\\\"\\n          minlength=\\\"6\\\"\\n          placeholder=\\\"******\\\"\\n        ></ion-input>\\n      </ion-item>\\n    </ion-list>\\n    <ion-button expand=\\\"block\\\" (click)=\\\"onSignUp()\\\">Sign Up</ion-button>\\n    <ion-button expand=\\\"block\\\" fill='outline' color='danger' (click)='onCancel()'>Cancel</ion-button>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AuthPage } from './auth.page';\nimport { SignUpComponent } from './sign-up/sign-up.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AuthPage, SignUpComponent],\n  entryComponents: [SignUpComponent]\n})\nexport class AuthPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvYXV0aC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { Router } from '@angular/router';\nimport { LoadingController, ModalController, AlertController } from '@ionic/angular';\nimport { NgForm } from '@angular/forms';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { auth } from 'firebase/app';\nimport { UserService, User } from '../services/user.service';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.page.html',\n  styleUrls: ['./auth.page.scss'],\n})\nexport class AuthPage implements OnInit {\n  isLoading = false;\n  isLogin = true;\n\n  email: string = \"\";\n  password: string = \"\";\n\n  users: User;\n\n  constructor(\n    private modalCtrl: ModalController,\n    private authService: AuthService,\n    private router: Router,\n    private loadingCtrl: LoadingController,\n    public afAuth: AngularFireAuth,\n    public user: UserService,\n    private alertController: AlertController\n  ) { }\n\n  ngOnInit() {\n  }\n\n//   onLogin(f: NgForm) {\n//     this.authService.login(f.value.email, f.value.password).subscribe(\n//       resp => {\n//         if (resp.idToken) {\n//           console.log(resp);\n//           this.router.navigateByUrl('/home');\n//         } else {\n//           console.log('login failed.');\n//         }\n//       },\n//       errorResp => {\n//         console.log(errorResp);\n//     });\n//     // this.isLoading = true;\n//     // this.loadingCtrl.create({keyboardClose: true, message: 'Logging in...'})\n//     //   .then(loadingEl => {\n//     //     loadingEl.present();\n//     //     setTimeout(() => {\n//     //       this.isLoading = false;\n//     //       loadingEl.dismiss();\n//     //       this.router.navigateByUrl('home');\n//     //     }, 1500);\n//     //   });\n//     // this.authService.login();\n//   }\n\n  async presentAlert(title: string, content: string) {\n    const alert = await this.alertController.create({\n      header: title,\n      message: content,\n      buttons: ['OK']\n    })\n\n    await alert.present()\n  }\n\n  async onLogin(){\n    const { email, password } = this;\n    try{\n      const res = await this.afAuth.auth.signInWithEmailAndPassword(email, password);\n\n      const loading = await this.loadingCtrl.create({\n        message: 'Loading User...'\n      });\n      await loading.present();\n\n      if(res.user) {\n        console.log(\"id : \" + res.user.uid);\n        this.user.getUser(res.user.uid).subscribe(r => {\n          this.users = r;\n          this.user.setUser({\n            email,\n            uid: res.user.uid,\n            nama: this.users.nama,\n            prodi: this.users.prodi,\n            semester: this.users.semester,\n            skills: this.users.skills\n          });\n          loading.dismiss();\n        });\n\n\n\t\t\t\tthis.router.navigateByUrl('/home');\n\t\t\t}\n    }\n    catch(err){\n      console.dir(err);\n        this.presentAlert(\"Login Fail!\", \"Email or Password doesn't match\");\n        if(err.code === \"auth/user-not-found\"){\n        console.log(\"User not found\");\n      }\n    }\n  }\n\n//   onSubmit(f: NgForm){\n//     this.authService.login(f.value.email, f.value.password).subscribe(\n//       resp => {\n//         if (resp.idToken) {\n//           console.log(resp);\n//           this.router.navigateByUrl('/home');\n//         } else {\n//           console.log('login failed.');\n//         }\n//       },\n//       errorResp => {\n//         console.log(errorResp);\n//     });\n//   }\n\n  async presentSignUpModal() {\n    const modal = await this.modalCtrl.create({\n      component: SignUpComponent\n    });\n    return await modal.present();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\n\ninterface AuthResponseData {\n  kind: string;\n  idToken: string;\n  email: string;\n  refreshToken: string;\n  localId: string;\n  expiresIn: string;\n  registered?: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private _userIsAuthenticated = true;\n  private _userID : string;\n\n  get userIsAuthenticated() {\n    return this._userIsAuthenticated;\n  }\n\n  get userID(){\n    return this._userID;\n  }\n\n  constructor(private http: HttpClient) { }\n\n  signup(email: string, password: string) {\n    return this.http.post<AuthResponseData>(\n      `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${environment.firebaseAPIKey}`,\n      {\n        email,\n        password,\n        returnSecureToken: true\n      }\n    );\n  }\n\n  login(email: string, password: string) {\n    //firebase login API here\n    this._userIsAuthenticated = true;\n    console.log(this._userIsAuthenticated);\n    console.log(\"test: \" + this._userID);\n    const res = this.http.post<AuthResponseData>(\n      `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${environment.firebaseAPIKey}`,\n      {\n        email,\n        password,\n        returnSecureToken: true\n      }\n    );\n\n    return res;\n  }\n\n  logout() {\n    this._userIsAuthenticated = false;\n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvc2lnbi11cC9zaWduLXVwLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ModalController, AlertController, LoadingController } from '@ionic/angular';\nimport { AuthService } from '../auth.service';\nimport { ProfileService, Profile } from '../../services/profile.service';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { auth } from 'firebase/app';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { UserService, User } from '../../services/user.service';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss'],\n})\nexport class SignUpComponent implements OnInit {\n  profile: Profile;\n  email: string = \"\";\n  nama: string = \"\";\n  prodi: string = \"\";\n  skills: string = \"\";\n  password: string = \"\";\n  cpassword: string = \"\";\n\n  constructor(private modalCtrl: ModalController, \n    private authSvc: AuthService, \n    private profileService: ProfileService,\n    public afAuth: AngularFireAuth,\n    public afstore: AngularFirestore,\n    public user: UserService,\n    private alertController: AlertController,\n    private loadingController: LoadingController) { }\n    users: User;\n\n  ngOnInit() {}\n\n  async presentAlert(title: string, content: string) {\n\t\tconst alert = await this.alertController.create({\n\t\t\theader: title,\n\t\t\tmessage: content,\n\t\t\tbuttons: ['OK']\n\t\t})\n\n\t\tawait alert.present()\n\t}\n  async onSignUp(){\n    const { email, password, cpassword } = this;\n    if(password !== cpassword){\n      return console.error(\"Password don't match\");\n    }\n    \n    try{\n      const res = await this.afAuth.auth.createUserWithEmailAndPassword(email, password);\n\n      this.afstore.doc(`users/${res.user.uid}`).set({\n        email\n      })\n      const loading = await this.loadingController.create({\n        message: 'Registering User...'\n      });\n      await loading.present();\n      this.user.getUser(res.user.uid).subscribe(r => {\n        this.users = r;\n        this.user.setUser({\n          email,\n          uid: res.user.uid,\n          nama: this.users.nama,\n          prodi: this.users.prodi,\n          semester: this.users.semester,\n          skills: this.users.skills\n        });\n        loading.dismiss();\n      });\n\n\n      this.presentAlert('Success', 'You are registered!')\n      this.modalCtrl.dismiss();\n\n      console.log(res);\n    }\n    catch(error){\n      console.dir(error);\n    }\n  }\n\n  // onSignUp(f: NgForm) {\n  //   this.profile = {\n  //     email: f.value.email,\n  //     nama : '',\n  //     prodi: '',\n  //     rating : 5,\n  //     skills: ''\n  //   }\n  //   this.profileService.addProfile(this.profile);\n  //   console.log(f.value);\n  //   this.authSvc.signup(f.value.email, f.value.pwd).subscribe(resp => {\n  //     console.log(resp);\n  //     this.modalCtrl.dismiss();\n  //   });\n  // }\n\n  onCancel() {\n    this.modalCtrl.dismiss();\n  }\n}"],"sourceRoot":""}